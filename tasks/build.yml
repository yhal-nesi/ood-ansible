- name: Install the rpm repo's key
  ansible.builtin.rpm_key:
    state: present
    key: "{{ rpm_repo_key }}"
  when: ansible_os_family == "RedHat"

- name: Install the rpm repo
  ansible.builtin.package:
    #name: "{{ rpm_repo_url }}"
    name:  https://yum.osc.edu/ondemand/latest/ondemand-release-web-latest-1-8.el9.noarch.rpm
    state: present
    disable_gpg_check: "{{ disable_gpg_check_rpm_repo | bool }}"
  when: ansible_os_family == "RedHat" and not ood_use_exiting_repo_file

- name: Enable epel
  ansible.builtin.package:
    name: 'epel-release'
    state: present
  when: ansible_os_family == "RedHat" and not ood_use_exiting_repo_file

- name: Install additional packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: ["@ruby:3.0", ondemand-nginx, ondemand-passenger, 
         ondemand-gems, lua-posix, mod_ssl,"@nodejs:20"]

- name: Make a tmp staging directory
  ansible.builtin.file:
    path: "{{ ood_source_dir }}"
    state: directory
    mode: 'u=rwx,g=rx,o=rx'

- name: Get the source code
  ansible.builtin.git:
    repo: "{{ ood_source_repo }}"
    dest: "{{ ood_source_dir }}"
    version: "{{ ood_source_version }}"
    force: yes

- name: Clean up to ensure proper build
  ansible.builtin.command: rake clean
  args:
    chdir: "{{ ood_source_dir }}"
  changed_when: true

- name: Build the project (this will take some time)
  ansible.builtin.command: "rake build -mj$(nproc)"
  args:
    chdir: "{{ ood_source_dir }}"
  poll: 30
  async: 1200
  changed_when: true
